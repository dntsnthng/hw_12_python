{"name": "Successful fill form", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=124.0.6367.119)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7CE9E1502+60802]\n\t(No symbol) [0x00007FF7CE95AC02]\n\t(No symbol) [0x00007FF7CE817B13]\n\t(No symbol) [0x00007FF7CE8005E0]\n\t(No symbol) [0x00007FF7CE7FEC3D]\n\t(No symbol) [0x00007FF7CE7FF22C]\n\t(No symbol) [0x00007FF7CE81A9F9]\n\t(No symbol) [0x00007FF7CE8AAB7E]\n\t(No symbol) [0x00007FF7CE88AB7A]\n\t(No symbol) [0x00007FF7CE8AA224]\n\t(No symbol) [0x00007FF7CE88A923]\n\t(No symbol) [0x00007FF7CE858FEC]\n\t(No symbol) [0x00007FF7CE859C21]\n\tGetHandleVerifier [0x00007FF7CECE411D+3217821]\n\tGetHandleVerifier [0x00007FF7CED260B7+3488055]\n\tGetHandleVerifier [0x00007FF7CED1F03F+3459263]\n\tGetHandleVerifier [0x00007FF7CEA9B846+823494]\n\t(No symbol) [0x00007FF7CE965F9F]\n\t(No symbol) [0x00007FF7CE960EC4]\n\t(No symbol) [0x00007FF7CE961052]\n\t(No symbol) [0x00007FF7CE9518A4]\n\tBaseThreadInitThunk [0x00007FFAB3A87344+20]\n\tRtlUserThreadStart [0x00007FFAB49426B1+33]", "trace": "@allure.tag('web')\n    @allure.title('Successful fill form')\n    def test_registers_user():\n        registration_page = RegistrationPage()\n    \n        with allure.step('Open registration page'):\n>           registration_page.open()\n\ntest_simple_user_registration.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\demoqa_tests\\model\\pages\\registration_page.py:14: in open\n    browser.open('/automation-practice-form')\n..\\.venv\\Lib\\site-packages\\selene\\core\\_browser.py:93: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n..\\.venv\\Lib\\site-packages\\selene\\core\\configuration.py:263: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n..\\.venv\\Lib\\site-packages\\selene\\core\\configuration.py:215: in get\n    driver.get(url)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000027B82788D40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...07FF7CE9518A4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAB3A87344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFAB49426B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=124.0.6367.119)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7CE9E1502+60802]\nE       \t(No symbol) [0x00007FF7CE95AC02]\nE       \t(No symbol) [0x00007FF7CE817B13]\nE       \t(No symbol) [0x00007FF7CE8005E0]\nE       \t(No symbol) [0x00007FF7CE7FEC3D]\nE       \t(No symbol) [0x00007FF7CE7FF22C]\nE       \t(No symbol) [0x00007FF7CE81A9F9]\nE       \t(No symbol) [0x00007FF7CE8AAB7E]\nE       \t(No symbol) [0x00007FF7CE88AB7A]\nE       \t(No symbol) [0x00007FF7CE8AA224]\nE       \t(No symbol) [0x00007FF7CE88A923]\nE       \t(No symbol) [0x00007FF7CE858FEC]\nE       \t(No symbol) [0x00007FF7CE859C21]\nE       \tGetHandleVerifier [0x00007FF7CECE411D+3217821]\nE       \tGetHandleVerifier [0x00007FF7CED260B7+3488055]\nE       \tGetHandleVerifier [0x00007FF7CED1F03F+3459263]\nE       \tGetHandleVerifier [0x00007FF7CEA9B846+823494]\nE       \t(No symbol) [0x00007FF7CE965F9F]\nE       \t(No symbol) [0x00007FF7CE960EC4]\nE       \t(No symbol) [0x00007FF7CE961052]\nE       \t(No symbol) [0x00007FF7CE9518A4]\nE       \tBaseThreadInitThunk [0x00007FFAB3A87344+20]\nE       \tRtlUserThreadStart [0x00007FFAB49426B1+33]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: InvalidArgumentException"}, "steps": [{"name": "Open registration page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=124.0.6367.119)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7CE9E1502+60802]\n\t(No symbol) [0x00007FF7CE95AC02]\n\t(No symbol) [0x00007FF7CE817B13]\n\t(No symbol) [0x00007FF7CE8005E0]\n\t(No symbol) [0x00007FF7CE7FEC3D]\n\t(No symbol) [0x00007FF7CE7FF22C]\n\t(No symbol) [0x00007FF7CE81A9F9]\n\t(No symbol) [0x00007FF7CE8AAB7E]\n\t(No symbol) [0x00007FF7CE88AB7A]\n\t(No symbol) [0x00007FF7CE8AA224]\n\t(No symbol) [0x00007FF7CE88A923]\n\t(No symbol) [0x00007FF7CE858FEC]\n\t(No symbol) [0x00007FF7CE859C21]\n\tGetHandleVerifier [0x00007FF7CECE411D+3217821]\n\tGetHandleVerifier [0x00007FF7CED260B7+3488055]\n\tGetHandleVerifier [0x00007FF7CED1F03F+3459263]\n\tGetHandleVerifier [0x00007FF7CEA9B846+823494]\n\t(No symbol) [0x00007FF7CE965F9F]\n\t(No symbol) [0x00007FF7CE960EC4]\n\t(No symbol) [0x00007FF7CE961052]\n\t(No symbol) [0x00007FF7CE9518A4]\n\tBaseThreadInitThunk [0x00007FFAB3A87344+20]\n\tRtlUserThreadStart [0x00007FFAB49426B1+33]\n\n", "trace": "  File \"C:\\Users\\Admin\\Desktop\\hw_12_python-master\\tests\\test_simple_user_registration.py\", line 12, in test_registers_user\n    registration_page.open()\n  File \"C:\\Users\\Admin\\Desktop\\hw_12_python-master\\demoqa_tests\\model\\pages\\registration_page.py\", line 14, in open\n    browser.open('/automation-practice-form')\n  File \"C:\\Users\\Admin\\Desktop\\hw_12_python-master\\.venv\\Lib\\site-packages\\selene\\core\\_browser.py\", line 93, in open\n    self.config._executor.get_url(relative_or_absolute_url)\n  File \"C:\\Users\\Admin\\Desktop\\hw_12_python-master\\.venv\\Lib\\site-packages\\selene\\core\\configuration.py\", line 263, in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n  File \"C:\\Users\\Admin\\Desktop\\hw_12_python-master\\.venv\\Lib\\site-packages\\selene\\core\\configuration.py\", line 215, in get\n    driver.get(url)\n  File \"C:\\Users\\Admin\\Desktop\\hw_12_python-master\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 356, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"C:\\Users\\Admin\\Desktop\\hw_12_python-master\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Admin\\Desktop\\hw_12_python-master\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1714905206824, "stop": 1714905209251}], "start": 1714905206824, "stop": 1714905209262, "uuid": "2e18c841-e633-4add-9922-10eeb097d84b", "historyId": "a89cc519998b4fc723ad191fbe0e64b5", "testCaseId": "a89cc519998b4fc723ad191fbe0e64b5", "fullName": "tests.test_simple_user_registration#test_registers_user", "labels": [{"name": "tag", "value": "web"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_simple_user_registration"}, {"name": "host", "value": "L"}, {"name": "thread", "value": "14176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_simple_user_registration"}]}